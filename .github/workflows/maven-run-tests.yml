# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  pull_request:
    branches: [ development ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: admin
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
          
      mongo:
        # Mongo Docker Hub image
        image: mongo
        # Provide the username, password and connection string for mongo
        env:
          ME_CONFIG_MONGODB_ADMINUSERNAME: admin
          ME_CONFIG_MONGODB_ADMINPASSWORD: admin
          ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
        # Set health checks to wait until mongo has started  
        options: >-
                --health-cmd mongo
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
        # Maps tcp port 27017 on service container to the host
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Setup Postgres
      run: psql -f ci/sql/setup_postgres.sql postgresql://postgres:admin@localhost:5432/postgres
    - name: Check status of Mongo
      run: mongo test --eval "printjson(db.getSiblingDB('TestDB'), db.getCollectionNames())"
    - name: Build with Maven
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>Eclipse BaSyx SDK GitHub Packages</id><username>x-access-token</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        mvn -B install --file basyx.components/pom.xml
      env:       
        GITHUB_TOKEN: ${{ github.token }}
    - name: Build Basyx.tck project with Maven
      run: |
        mvn -B package --file basyx.tck/pom.xml